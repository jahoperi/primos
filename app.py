# -*- coding: utf-8 -*-
"""
Created on Thu Mar 17 10:00:34 2022

@author: jahop_fz60h0
"""



import json
import streamlit as st
from streamlit_lottie import st_lottie  # pip install streamlit-lottie
import streamlit.components.v1 as components
import requests  # pip install requests

def load_lottieurl(url: str):
    r = requests.get(url)
    if r.status_code != 200:
        return None
    return r.json()
    



lottie_hello = load_lottieurl("https://assets4.lottiefiles.com/packages/lf20_qb4hnhvz.json")




st_lottie(lottie_hello, key = "hello")



st.title("Distancia entre números primos")

st.subheader("Consideremos el conjunto:")
st.subheader("2W = {2n con n >= 2 en N | 2(2) = 4, 2(3) = 6, 2(4) = 8, 2(5) = 10, 2(6) = 12, 2(7) = 14, 2(8) = 16, 2(9) = 18, 2(10) = 20, 2(11) = 22, 2(12) = 24, 2(13) = 26, 2(14) = 28, 2(15) = 30, 2(16) = 32, 2(17) = 34, 2(18) = 36, 2(19) = 38, 2(20) = 40, 2(21) = 42, 2(22) = 44, 2(23) = 46, 2(24) = 48, 2(25) = 50, 2(26) = 52, 2(27) = 54,...}")
st.subheader('') 
st.subheader('Distancia-0') 
st.subheader('') 
st.subheader('Consideremos el intervalo [n , n]')
st.subheader('')

st.subheader('Para:')
st.subheader('n = 2, [2, 2], 2 + 2 = 4 ------ caso(i)')
st.subheader('n = 3, [3, 3], 3 + 3 = 6 ------ caso(i)')
st.subheader('n = 4, [4, 4], 4 + 4 = 8 ------ caso(ii)')
st.subheader('n = 5, [5, 5], 5 + 5 = 10 ----- caso(i)')
st.subheader('n = 6, [6, 6], 6 + 6 = 12 ----- caso(ii)')
st.subheader('n = 7, [7, 7], 7 + 7 = 14 ----- caso (i)')
st.subheader('n = 8, [8, 8], 8 + 8 = 16 ----- caso(ii)')
st.subheader('n = 9, [9, 9], 9 + 9 = 18 ----- caso(iii)')
st.subheader('n = 10, [10, 10], 10 + 10 = 20 ----- caso(ii)')
st.subheader('n = 11, [11, 11], 11 + 11 = 22 ----- caso (i)')
st.subheader('n = 12, [12, 12], 12 + 12 = 24 ----- caso(ii)')
st.subheader('n = 13, [13, 13], 13 + 13 = 26 ----- caso(i)')
st.subheader('n = 14, [14, 14], 14 + 14 = 28 ----- caso(ii)')
st.subheader('n = 15, [15, 15], 15 + 15 = 30 ----- caso(iii)')
st.subheader('n = 16, [16, 16], 16 + 16 = 32 ----- caso (ii)')
st.subheader('n = 17, [17, 17], 17 + 17 = 34 ----- caso(i)')
st.subheader('n = 18, [18, 18], 18 + 18 = 36 ----- caso(ii)')
st.subheader('n = 19, [19, 19], 19 + 19 = 38 ----- caso (i)')
st.subheader('n = 20, [20, 20], 20 + 20 = 40 ----- caso(ii)')
st.subheader('n = 21, [21, 21], 21 + 21 = 42 ----- caso(iii)')
st.subheader('n = 22, [22, 22], 22 + 22 = 44 ----- caso(ii)')
st.subheader('n = 23, [23, 23], 23 + 23 = 46 ----- caso(i)')
st.subheader('n = 24, [24, 24], 24 + 24 = 48 ----- caso (ii)')
st.subheader('n = 25, [25, 25], 25 + 25 = 50 ----- caso(iii)')
st.subheader('n = 26, [26, 26], 26 + 26 = 52 ----- caso(ii)')
st.subheader('n = 27, [27, 27], 27 + 27 = 54 ----- caso(iii)')

st.subheader('Se presentan tres casos:')
st.subheader('i) [p, p], p es número primo')
st.subheader('ii) [s, s], s es par')
st.subheader('iii) [t , t], t es número impar no primo')



st.subheader('')
st.subheader('Sean los siguientes conjuntos:')
st.subheader('')
st.subheader('A = {[p, p] que pertenecen al conjunto 2W | es el caso (i)}')
st.subheader('A1 = {[s, s] que pertenecen al conjunto 2W | es el caso (ii)}')
st.subheader('A2 = {[t, t] que pertenecen al conjunto 2W | es el caso (iii)}')
st.subheader('')
st.subheader('Observemos que:')
st.subheader('')
st.subheader('A = {4, 6, 10, 14, 22, 26, 34, 38, 46}')
st.subheader('')
st.subheader('A1 = {8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52 }')
st.subheader('')
st.subheader('A2 = {18, 30, 42, 50, 54}')
st.subheader('Luego,')
st.subheader('')
st.subheader('(A U A1 U A2) = {4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54} = 2W, (nota: truncado en n = 27)')
st.subheader('')


st.subheader('Es decir.')
st.subheader('')
st.subheader('2W = (A ∪ A1 ∪ A2), (nota: truncado en n = 27)')
st.subheader('')
st.subheader('Tomemos ahora en ambos lados la cardinalidad de los conjuntos')
st.subheader('')
st.subheader('|2W| = |A U A1 U A2|, para que la igualdad entre los conjuntos se conserve (nota: truncado en n = 27)')
st.subheader('')
st.subheader('Pero, sabemos que')
st.subheader('|2W| =  ∞, (nota: si n = 2, 3, 4, 5, 6, ...)')
st.subheader('')
st.subheader('y')
st.subheader('')
st.subheader('|(A U A1 U A2)| = ∞, para que la igualdad entre los conjuntos se conserve (nota: siempre que n = 2, 3, 4, 5, 6,...)')
st.subheader('Observación: |(A U A1 U A2)| = ∞, si al menos uno de los conjuntos A ó A1 ó A2 tiene cardinalidad infinita')
st.subheader('')
st.subheader('Por simplicidad, consideramos que |A1| = ∞, |A| = finita y |A2| = finita.')
st.subheader('')
st.subheader('He tomado el conjunto A1, porque el patrón es que los números que pertenecen a este conjunto, empieza en 8 y van sumando en 4 unidades')
st.subheader('')
st.subheader('Entonces el conjunto (A U A1 U A2) nos quedaría')
st.subheader('')
st.subheader('(A U A1 U A2) = {4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 94, 100, ...}')
st.subheader('Notese que el último número es el 54 que está en el conjunto A2. El último número en el conjunto A1 es 52; y que suponemos tiene cardinalidad infinita; entonces vamos sumando de 4 unidades')
st.subheader('52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100,...')
st.subheader('¿Como tapamos los huecos comprendidos en?')
st.subheader('')
st.subheader('56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100,...')
st.subheader('Faltan los números:')
st.subheader('')
st.subheader('58, 62, 66, 70, 74, 78, 82, 86, 90, 94, 98,...')
st.subheader('')
st.subheader('faltan en el conjunto A los números: 58, 62, 74, 82, 86, 94')
st.subheader('')
st.subheader('A = {4, 6, 10, 14, 22, 26, 34, 38, 46, 58 = 29 + 29, 62 = 31 + 31, 74 = 37 + 37, 82 = 41 + 41, 86 = 43 + 43, 94 = 47 + 47} Nota: para tapar hasta 100 nada más')
st.subheader('')
st.subheader('faltan en el conjunto A2 los números: 66, 70, 78, 90, 98')
st.subheader('')
st.subheader('A2 = {18, 30, 42, 50, 54, 66 = 33 + 33, 70 = 35 + 35, 78 = 39 + 39, 90 = 45 + 45, 98 = 49 + 49} Nota: para tapar hasta 100 nada más')
st.subheader('')
st.subheader('Con este ejercicio, nos quedaría')
st.subheader('')
st.subheader('(A U A1 U A2) = {4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100,...} Nota: para tapar hasta 100 nada más')
st.subheader('')
st.subheader('Entonces, ya podemos concluir')
st.subheader('')
st.subheader('|2W| = ∞ = |(A U A1 U A2)|, si y sólo si |A| = ∞, |A1| = ∞ y |A2| = ∞')
st.subheader('')
st.subheader('Como')
st.subheader('')
st.subheader('|A| = ∞')
st.subheader('')
st.subheader('impica que tenemos infinitas parejas de números primos de distancia-0')


st.subheader('')
st.subheader('')
st.subheader('')
st.subheader('+++++++++++++++++++++++++++++++++++++++++++++++++++++')

st.subheader("Consideremos el conjunto 2W = {2n con n >= 4 en N | 2(4) = 8, 2(5) = 10, 2(6) = 12, 2(7) = 14, 2(8) = 16, 2(9) = 18, 2(10) = 20, 2(11) = 22, 2(12) = 24, 2(13) = 26, 2(14) = 28, 2(15) = 30, 2(16) = 32, 2(17) = 34, 2(18) = 36, 2(19) = 38, 2(20) = 40, 2(21) = 42, 2(22) = 44, 2(23) = 46, 2(24) = 48, 2(25) = 50, 2(26) = 52, 2(27) = 54,...}")
st.subheader('') 
st.subheader('Distancia-2') 
st.subheader('') 
st.subheader('Consideremos el intervalo [n -1 , n -1]')
st.subheader('')

st.subheader('Para:')
st.subheader('n = 4, [4 -1, 4 + 1], 3 + 5 = 8   -------- caso(i)')
st.subheader('n = 5, [5 - 1, 5 + 1], 4 + 6 = 10 ------ caso(iv)')
st.subheader('n = 6, [6 -1, 6 + 1], 5 + 7 = 12  ------ caso(i)')
st.subheader('n = 7, [7 -1, 7 + 1], 6 + 8 = 14  ----- caso(iv)')
st.subheader('n = 8, [8 - 1, 8 + 1], 7 + 9 = 16 ----- caso(ii)')
st.subheader('n = 9, [9 - 1, 9 + 1], 8 + 10 = 18 ----- caso (iv)')
st.subheader('n = 10, [10 -1, 10 + 1], 9 + 11 = 20 ----- caso(iii)')
st.subheader('n = 11, [11 -1, 11 + 1], 10 + 12 = 22 ----- caso(iv)')

st.subheader('n = 12, [12 -1, 12 + 1], 11 + 13 = 24   -------- caso(i)')
st.subheader('n = 13, [13 - 1, 13 + 1], 12 + 14 = 26 ------ caso(iv)')
st.subheader('n = 14, [14 -1, 14 + 1], 13 + 15 = 28  ------ caso(ii)')
st.subheader('n = 15, [15 -1, 15 + 1], 14 + 16 = 30  ----- caso(iv)')
st.subheader('n = 16, [16 - 1, 16 + 1], 15 + 17 = 32 ----- caso(iii)')
st.subheader('n = 17, [17 - 1, 17 + 1], 16 + 18 = 34 ----- caso (iv)')
st.subheader('n = 18, [18 -1, 18 +1], 17 + 19 = 36 ----- caso(i)')
st.subheader('n = 19, [19 -1, 19 + 1], 18 + 20 = 38 ----- caso(iv)')

st.subheader('n = 20, [20 -1, 20 + 1], 19 + 21 = 40   -------- caso(ii)')
st.subheader('n = 21, [21 - 1, 21 + 1], 20 + 22 = 42 ------ caso(iv)')
st.subheader('n = 22, [22 -1, 22 + 1], 21 + 23 = 44  ------ caso(iii)')
st.subheader('n = 23, [23 -1, 23 + 1], 22 + 24 = 46  ----- caso(iv)')
st.subheader('n = 24, [24 - 1, 24 + 1], 23 + 25 = 48 ----- caso(ii)')
st.subheader('n = 25, [25 - 1, 25 + 1], 24 + 26 = 50 ----- caso (iv)')
st.subheader('n = 26, [26 -1, 26 +1], 25 + 27 = 52 ----- caso(v)')
st.subheader('n = 27, [27 -1, 27 +1], 26 + 28 = 54 ----- caso(iv)')

st.subheader('Se presentan cinco casos:')
st.subheader('i) [p, p + 2], p es número primo')
st.subheader('ii) [p, r], r número impar no primo')
st.subheader('iii) [r , p], r número impar no primo')
st.subheader('iv) [s , s + 2], s es número par')
st.subheader('v)) [t , t + 2], t es número impar no primo')


st.subheader('')
st.subheader('Sean los siguientes conjuntos:')
st.subheader('')
st.subheader('B = {[p, p + 2] que pertenecen al conjunto 2W | es el caso (i)}')
st.subheader('B1 = {[p, r] que pertenecen al conjunto 2W | es el caso (ii)}')
st.subheader('B2 = {[r, p] que pertenecen al conjunto 2W | es el caso (iii)}')
st.subheader('B3 = {[s, s + 2] que pertenecen al conjunto 2W | es el caso (iv)}')
st.subheader('B4 = {[t, t + 2] que pertenecen al conjunto 2W | es el caso (v)}')
st.subheader('')
st.subheader('Observemos que:')
st.subheader('')
st.subheader('B = {8, 12, 24, 36}')
st.subheader('')
st.subheader('B1 = {16, 28, 40, 48}')
st.subheader('')
st.subheader('B2 = {20, 32, 44}')
st.subheader('')
st.subheader('B3 = {10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54}')
st.subheader('')
st.subheader('B4 = {52}')
st.subheader('')
st.subheader('Luego,')
st.subheader('')
st.subheader('(B U B1 U B2 U B3 U B4) = {8, 10, 12,14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54} nota: truncado en n = 27')
st.subheader('')
st.subheader('Es decir.')
st.subheader('')
st.subheader('2W = (B U B1 U B2 U B3 U B4), (nota: truncado en n = 27)')
st.subheader('')
st.subheader('Tomemos ahora en ambos lados la cardinalidad de los conjuntos')
st.subheader('')
st.subheader('|2W| = |(B U B1 U B2 U B3 U B4)|, para que la igualdad entre conjuntos se conserve (nota: truncado en n = 27)')
st.subheader('')
st.subheader('Pero, sabemos que')
st.subheader('|2W| = ∞, (nota: si n = 4, 5, 6, 7, 8,...)')
st.subheader('')
st.subheader('y')
st.subheader('')
st.subheader('|B U B1 U B2 U B3 U B4| = ∞, para que la igualdad entre los conjuntos se conserve (nota: siempre que n = 4, 5, 6, 7, 8,...)')
st.subheader('')
st.subheader('Observación: |(B U B1 U B2 U B3 U B4) | = ∞, si al menos uno de los conjuntos B ó B1 ó B2 ó B3 ó B4 tiene cardinalidad infinita')
st.subheader('')
st.subheader('Por simplicidad, consideramos que |B3| = ∞, |B| = finita,  |B1| = finita, |B2| = finita y |B4| = finita')
st.subheader('')
st.subheader('He tomado el conjunto B3, porque el patrón es que los números que pertenecen a este conjunto, empieza en 10 y van sumando en 4 unidades')
st.subheader('')
st.subheader('Entonces el conjunto (B U B1 U B2 U B3 U B4) nos quedaría')
st.subheader('')
st.subheader('(B U B1 U B2 U B3 U B4) = {8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 58, 62, 66, 70, 74, 78, 82, 86, 90, 94, 98, 102, ...}')
st.subheader('')
st.subheader('Notese que el último número es el 54 que está en el conjunto B3 y que suponemos tiene cardinalidad infinita; entonces vamos sumando de 4 unidades')
st.subheader('')
st.subheader('54, 58, 62, 66, 70, 74, 78, 82, 86, 90, 94, 98, 102,...')
st.subheader('')
st.subheader('¿Como tapamos los huecos comprendidos en?')
st.subheader('')
st.subheader('54, 58, 62, 66, 70, 74, 78, 82, 86, 90, 94, 98, 102,...')
st.subheader('')
st.subheader('Faltan los números:')
st.subheader('')
st.subheader('56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100,...')
st.subheader('')
st.subheader('faltan en el conjunto B los números: 60, 84')
st.subheader('')
st.subheader('B = {8, 12, 24, 36, 60 = 29 + 31, 84 = 41 + 43} Nota: para tapar hasta 102 nada más')
st.subheader('')
st.subheader('faltan en el conjunto B1 los números: 64, 76, 88, 96')
st.subheader('')
st.subheader('B1 = {16, 28, 40, 48, 64 = 31 + 33, 76 = 37 + 39, 88 = 43 + 45, 96 = 47 + 49} Nota: para tapar hasta 102 nada más')
st.subheader('')
st.subheader('faltan en el conjunto B2 los números: 56, 72, 80, 92')
st.subheader('')
st.subheader('B2 = {20, 32, 44, 56 = 27 + 29, 72 = 35 + 37, 80 = 39 + 41, 92 = 45 + 47} Nota: para tapar hasta 102 nada más')
st.subheader('faltan en el conjunto B4 los números: 68, 100')
st.subheader('')
st.subheader('B4 = {52, 68 = 33 + 35, 100 = 49 + 51} Nota: para tapar hasta 102 nada más')
st.subheader('')
st.subheader('Con este ejercicio, nos quedaría')
st.subheader('')
st.subheader('(B U B1 U B2 U B3 U B4) = {8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102,...} Nota: para tapar hasta 102 nada más')
st.subheader('')
st.subheader('Entonces, ya podemos concluir')
st.subheader('')
st.subheader('|2W| = ∞ = |(B U B1 U B2 U B3 U B4)|, si y sólo si |B| = ∞, |B1| = ∞, |B2| = ∞, |B3| = ∞ y |B4| = ∞ ')
st.subheader('')
st.subheader('Como')
st.subheader('')
st.subheader('|B| = ∞')
st.subheader('')
st.subheader('impica que tenemos infinitas parejas de números primos de distancia-2')




st.subheader('')
st.subheader('')
st.header('JAVIER HORACIO PEREZ RICARDEZ') 
st.subheader('')  
st.subheader('Maestría en Ciencias de la Computación') 
st.subheader('')  
st.subheader('Cédula: 5290889') 
st.subheader('') 
st.subheader('Licenciatura en Matemáticas')  
st.subheader('') 
st.subheader('Cédula: 4431246') 
st.subheader('')  
st.subheader('Móvil: 993 291 3812') 
st.subheader('')  
st.subheader('email: jahoperi@gmail.com') 
